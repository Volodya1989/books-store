{"mappings":"oeAAAA,EAAA,S,iCCEA,IAAAC,EAAAD,EAAA,S,0BAKA,MAAME,EAAeC,SAASC,cAAc,kBACtCC,EAAeF,SAASC,cAAc,UAE5C,EAAAH,EAAAK,sBACGC,MAAKC,IACJC,QAAQC,IAAIF,GACZ,MAAMG,EAASH,EACZI,KAAI,EAACC,UAAEA,KACC,uEAAuEA,WAE/EC,KAAK,IACRZ,EAAaa,mBAAmB,YAAaJ,GACrB,UAAxBK,EAAAC,cAAcC,OACV,EAAAC,EAAAC,aAAY,UACZ,EAAAD,EAAAC,aAAY,QAChBf,EAAagB,UAAUC,IAAI,YAAY,IAExCC,OAAMC,IACLf,QAAQC,IAAIc,EAAM,ICtBtBxB,EAAA,SCFAC,EAAAD,EAAA,a,uCASA,MAAMyB,EAAetB,SAASC,cAAc,kBACtCsB,EAAYvB,SAASC,cAAc,iBACnCuB,EAAYxB,SAASC,cAAc,oBACnCwB,EAAYzB,SAASC,cAAc,YAEzCqB,EAAaI,iBAAiB,SAC9BC,eAAmCC,GACjC,MAAMC,EAAOD,EAAME,OAAOC,YACpBC,EAAYP,EAAUM,YAE5B,GAAIF,IAASG,EAAW,CACtBT,EAAUU,UAAY,IACtB,EAAAnC,EAAAoC,iBAAgB9B,KACb+B,GACH,MAAMC,EAAgB,qBAChBC,EAAeD,EAChBE,MAAM,KACNC,OAAO,EAAGH,EAAcE,MAAM,KAAKE,OAAS,GAC5C7B,KAAK,KACJ8B,EAAaL,EAChBE,MAAM,KAAKF,EAAcE,MAAM,KAAKE,OAAS,GAChDhB,EAAUS,UAAY,GAAGI,mCAA8CI,U,KAClE,CACL,MAAMJ,EAAeR,EAChBS,MAAM,KACNC,OAAO,EAAGV,EAAKS,MAAM,KAAKE,OAAS,GACnC7B,KAAK,KACJ8B,EAAaZ,EAChBS,MAAM,KAAKT,EAAKS,MAAM,KAAKE,OAAS,GACvChB,EAAUS,UAAY,GAAGI,mCAA8CI,WACvEjB,EAAUN,UAAUC,IAAI,iBACxBI,EAAUL,UAAUC,IAAI,mBAO5B,UAA0Bd,KAAEA,IAC1BkB,EAAUU,UAAY,GACtB,MAAMzB,EAASH,EAEZI,KAAI,EAACiC,OAAEA,EAAMC,MAAEA,EAAKC,WAAEA,EAAUC,IAAEA,KAC1B,oGAEwCA,oGAEDD,WAAoBD,kGACKA,6DACxBD,mEAKhD/B,KAAK,IACRY,EAAUU,UAAYzB,C,CArBpBsC,OADmB,EAAAhD,EAAAiD,2BAA0BlB,G,KA2BjD,MAAMmB,EAAYhD,SAASC,cAAc,kBAIlC,SAASkC,EAAec,GAC7B,GAAoC,GAAhCA,EAAiB5C,KAAKmC,OACxBQ,EAAU9B,UAAUgC,OAAO,iBACtB,CACL,MAAMC,EAAiBF,EAAiB5C,KACrCI,KAAI,EAACC,UAAEA,EAAS0C,MAAEA,KAgBV,4FAEgC1C,oHAjBxB0C,EACZ3C,KAAI,EAACiC,OAAEA,EAAMC,MAAEA,EAAKC,WAAEA,EAAUC,IAAEA,KAC1B,oGAEkCA,oGAEDD,WAAoBD,kGACKA,6DACxBD,+EAM1C/B,KAAK,0JAaTA,KAAK,IAERY,EAAUX,mBAAmB,YAAauC,GAClB,UAAxBtC,EAAAC,cAAcC,OACV,EAAAC,EAAAC,aAAY,UACZ,EAAAD,EAAAC,aAAY,SAChB,EAAAoC,EAAAC,c,GAzCJ,EAAAxD,EAAAoC,iBAAgB9B,KAAK+B,G,WCtErBtC,EAAA,S","sources":["src/index.js","src/js/render-categories-list.js","src/js/render-categories-books.js","src/js/render-category-books.js","src/js/choose-category.js"],"sourcesContent":["import './js/switch-theme';\nimport './js/extra-block-slider';\nimport './js/modal-window';\nimport './js/burger-menu';\nimport './js/render-categories-list';\nimport './js/render-categories-books';\nimport './js/books-action';\nimport './js/choose-category';\nimport './js/render-category-books';\nimport './js/shopping-list';\nimport './js/color-swithcer';\n","// Логіка, яка рендерить список категорій\n// Визиваеться одразу в index.js\nimport { fetchAllCategories } from './fetch-func';\nimport { shopping_info } from './shopping-list';\n\nimport { renderTheme } from './switch-theme';\n\nconst categoryList = document.querySelector('.category-list');\nconst loadCategory = document.querySelector('.load');\n\nfetchAllCategories()\n  .then(data => {\n    console.log(data);\n    const markup = data\n      .map(({ list_name }) => {\n        return `<li class=\"category-list-item global-list light-theme theme-switch\">${list_name}</li>`;\n      })\n      .join('');\n    categoryList.insertAdjacentHTML('beforeend', markup);\n    shopping_info.theme === 'light'\n      ? renderTheme('light')\n      : renderTheme('dark');\n    loadCategory.classList.add('unvisible');\n  })\n  .catch(error => {\n    console.log(error);\n  });\n","// рендер всіх секцій категорій з книгами\n// Для цього можна використовувати масив категорій і по циклу визивати renderCategoryBooks(category)\n\nimport { fetchAllCategories } from './fetch-func';\nimport { renderCategoryBooks, renderTopBooks } from './render-category-books';\n\n// одразу рендеремо секцію топ\n// renderTopBooks();\n","// Рендер однієї секції категорії з книгами\nimport { fetchBooksByExactCategory, fetchTopBooks } from './fetch-func';\n\nexport function renderCategoryBooks() {}\n\nimport { modalWindow } from './modal-window';\nimport { shopping_info } from './shopping-list';\nimport { renderTheme } from './switch-theme';\n// export function renderCategoryBooks() { }\n\nconst categoryList = document.querySelector('.category-list');\nconst bookThumb = document.querySelector('.tb-container');\nconst headingEl = document.querySelector('.heading-primary');\nconst allCtgrEl = document.querySelector('#allctgr');\n\ncategoryList.addEventListener('click', renderCategoryBooks);\nasync function renderCategoryBooks(event) {\n  const item = event.target.textContent;\n  const itemFirst = allCtgrEl.textContent;\n\n  if (item === itemFirst) {\n    bookThumb.innerHTML = '';\n    fetchTopBooks().then\n      (renderTopBooks);\n    const headingMarkup = 'Best Sellers Books';\n    const startHeading = headingMarkup\n        .split(' ')\n        .splice(0, headingMarkup.split(' ').length - 1)\n        .join(' ');\n    const endHeading = headingMarkup\n      .split(' ')[headingMarkup.split(' ').length - 1];\n    headingEl.innerHTML = `${startHeading} <span class=\"colored-heading\">${endHeading}</span>`;\n  } else {\n    const startHeading = item\n        .split(' ')\n        .splice(0, item.split(' ').length - 1)\n        .join(' ');\n    const endHeading = item\n      .split(' ')[item.split(' ').length - 1];\n    headingEl.innerHTML = `${startHeading} <span class=\"colored-heading\">${endHeading}</span>`;\n    headingEl.classList.add('ctg-maintitle');\n    bookThumb.classList.add('flex-container');\n\n    const data = await fetchBooksByExactCategory(item);\n    createMarkupBook(data);\n  }\n}\n\nfunction createMarkupBook({ data }) {\n  bookThumb.innerHTML = '';\n  const markup = data\n\n    .map(({ author, title, book_image, _id }) => {\n      return `\n          <li class=\"flex-container-item\">\n            <a href=# class=\"global-link\" data-id=\"${_id}\">\n              <div class=\"tb-book-card\">\n                <img class=\"tb-book-img img\" src=\"${book_image}\" alt=\"${title}\" loading=\"lazy\">\n                <p class=\"tb-book-title light-theme theme-switch global-p\">${title}</p>\n                <p class=\"tb-book-author global-p\">${author}</p>\n              </div>\n            </a>\n          </li>`;\n    })\n    .join('');\n  bookThumb.innerHTML = markup;\n}\n\n// export function renderTopBooks() { }\n\nconst noBooksEl = document.querySelector('.no-books-card');\n\nfetchTopBooks().then(renderTopBooks);\n\nexport function renderTopBooks(bestsellersArray) {\n  if (bestsellersArray.data.length == 0) {\n    noBooksEl.classList.remove('is-hidden');\n  } else {\n    const markupCategory = bestsellersArray.data\n      .map(({ list_name, books }) => {\n        const markup = books\n          .map(({ author, title, book_image, _id }) => {\n            return `\n          <li class=\"flex-container-item\">\n            <a href=# class=\"global-link\" data-id=\"${_id}\">\n              <div class=\"tb-book-card\">\n                <img class=\"tb-book-img img\" src=\"${book_image}\" alt=\"${title}\" loading=\"lazy\">\n                <p class=\"tb-book-title light-theme theme-switch global-p\">${title}</p>\n                <p class=\"tb-book-author global-p\">${author}</p>\n              </div>\n            </a>\n          </li>\n          `;\n          })\n          .join('');\n        return `\n      <li class=\"tb-category-container\">\n        <h2 class='tb-category global-title'>${list_name}</h2>\n        <div class='tb-books-container'>\n          <ul class=\"global-list flex-container\">\n            ${markup}\n          </ul>\n        </div>\n        <button class=\"tb-button global-button light-theme theme-switch\">See more</button>\n      </li>\n      `;\n      })\n      .join('');\n\n    bookThumb.insertAdjacentHTML('beforeend', markupCategory);\n    shopping_info.theme === 'light'\n      ? renderTheme('light')\n      : renderTheme('dark');\n    modalWindow();\n  }\n}\n","// логіка, коли вибираешь категорію\n\nimport { fetchBooksByExactCategory } from './fetch-func';\n"],"names":["parcelRequire","$5DwtN","$3028f4cd151baf40$var$categoryList","document","querySelector","$3028f4cd151baf40$var$loadCategory","fetchAllCategories","then","data","console","log","markup","map","list_name","join","insertAdjacentHTML","$jJ57b","shopping_info","theme","$gyeM6","renderTheme","classList","add","catch","error","$11b1bb17ee1ab8b3$var$categoryList","$11b1bb17ee1ab8b3$var$bookThumb","$11b1bb17ee1ab8b3$var$headingEl","$11b1bb17ee1ab8b3$var$allCtgrEl","addEventListener","async","event","item","target","textContent","itemFirst","innerHTML","fetchTopBooks","$11b1bb17ee1ab8b3$export$897fb17cde4e950b","headingMarkup","startHeading","split","splice","length","endHeading","author","title","book_image","_id","$11b1bb17ee1ab8b3$var$createMarkupBook","fetchBooksByExactCategory","$11b1bb17ee1ab8b3$var$noBooksEl","bestsellersArray","remove","markupCategory","books","$2hTmC","modalWindow"],"version":3,"file":"index.252a220e.js.map"}