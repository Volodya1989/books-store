{"mappings":"iiBAAAA,EAAA,S,iCCEA,IAAAC,EAAAD,EAAA,SAEME,EAAeC,SAASC,cAAc,kBACtCC,EAAeF,SAASC,cAAc,UAE5C,EAAAH,EAAAK,sBACGC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZ,IAAMG,EAASH,EACZI,KAAI,SAAAC,G,IAAGC,EAASD,EAATC,UACN,MAAO,uEAAiFC,OAAVD,EAAU,Q,IAEzFE,KAAK,IACRd,EAAae,mBAAmB,YAAaN,GAC7CN,EAAaa,UAAUC,IAAI,Y,IAE5BC,OAAM,SAAAC,GACLZ,QAAQC,IAAIW,E,IChBhBrB,EAAA,SCFA,IAAAsB,EAAAtB,EAAA,S,yCAIMuB,EAAepB,SAASC,cAAc,kBACtCoB,EAAYrB,SAASC,cAAc,iBACnCqB,EAAYtB,SAASC,cAAc,oB,SAG1BsB,I,OAAAA,EAAfC,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,EAAmCC,G,IAC3BC,EAIAxB,E,yEAJAwB,EAAOD,EAAME,OAAOC,YAC1BT,EAAUS,YAAcF,EACxBP,EAAUP,UAAUC,IAAI,iBACxBV,QAAQC,IAAIsB,G,UACO,EAAA/B,EAAAkC,2BAA0BH,G,OAAvCxB,EAAI4B,EAAAC,KACV5B,QAAQC,IAAIF,GACZ8B,EAAiB9B,G,4CAPe+B,MAAAC,KAAAC,U,CAUlC,SAASH,EAAiBI,G,IAAAlC,EAAAkC,EAAElC,KAC1BgB,EAAUmB,UAAY,GACtB,IAAMhC,EAASH,EACZI,KAAI,SAAAC,G,IAAG+B,EAAM/B,EAAN+B,OAAQC,EAAKhC,EAALgC,MAAOC,EAAUjC,EAAViC,WACrB,MAAO,uHAEwD/B,OAApB+B,EAAW,WACR/B,OADiB8B,EAAM,0DAElE9B,OAD2C8B,EAAM,iBAC1C9B,OAAP6B,EAAO,kB,IAGX5B,KAAK,IACRQ,EAAUmB,UAAYhC,C,CAvBxBY,EAAawB,iBAAiB,S,SACKhB,G,OAApBL,EAAmBa,MAAAC,KAAAC,U,IA2BlC,IAAMO,EAAgB7C,SAASC,cAAc,iBACvC6C,EAAY9C,SAASC,cAAc,mBAEzC,EAAAH,EAAAiD,iBAAgB3C,MAET,SAAwB4C,GAC7B,GAAoC,GAAhCA,EAAiB3C,KAAK4C,OACxBH,EAAU/B,UAAUmC,OAAO,iBACtB,CACL,IAAMC,EAAiBH,EAAiB3C,KACrCI,KAAI,SAAA2C,G,IAAGzC,EAASyC,EAATzC,UACAH,EADgB4C,EAALC,MAEd5C,KAAI,SAAAC,G,IAAG+B,EAAM/B,EAAN+B,OAAQC,EAAKhC,EAALgC,MAAOC,EAAUjC,EAAViC,WAAYW,EAAG5C,EAAH4C,IACjC,MAAO,oGAIiC1C,OAFC0C,EAAI,oGAEe1C,OAApB+B,EAAW,WACc/B,OADL8B,EAAM,mFAEzB9B,OADwB8B,EAAM,6DACvB9B,OAAP6B,EAAO,4E,IAMjD5B,KAAK,IACR,MAAO,+FAKDD,OAHiCD,EAAU,sHAGpCC,OAAPJ,EAAO,sJ,IAOdK,KAAK,IAERgC,EAAc/B,mBAAmB,YAAaqC,IAC9C,EAAAI,EAAAC,c,gBC5EJ3D,EAAA,S","sources":["src/index.js","src/js/render-categories-list.js","src/js/render-categories-books.js","src/js/render-category-books.js","src/js/choose-category.js"],"sourcesContent":["import './js/switch-theme';\nimport './js/extra-block-slider';\nimport './js/modal-window';\nimport './js/burger-menu';\nimport './js/render-categories-list';\nimport './js/render-categories-books';\nimport './js/books-action';\nimport './js/choose-category';\nimport './js/render-category-books';\nimport './js/shopping-list';\nimport './js/color-swithcer';\n","// Логіка, яка рендерить список категорій\n// Визиваеться одразу в index.js\nimport { fetchAllCategories } from './fetch-func';\n\nconst categoryList = document.querySelector('.category-list');\nconst loadCategory = document.querySelector('.load');\n\nfetchAllCategories()\n  .then(data => {\n    console.log(data);\n    const markup = data\n      .map(({ list_name }) => {\n        return `<li class=\"category-list-item global-list light-theme theme-switch\">${list_name}</li>`;\n      })\n      .join('');\n    categoryList.insertAdjacentHTML('beforeend', markup);\n    loadCategory.classList.add('unvisible');\n  })\n  .catch(error => {\n    console.log(error);\n  });\n","// рендер всіх секцій категорій з книгами\n// Для цього можна використовувати масив категорій і по циклу визивати renderCategoryBooks(category)\n\nimport { fetchAllCategories } from './fetch-func';\nimport { renderCategoryBooks, renderTopBooks } from './render-category-books';\n\n// одразу рендеремо секцію топ\n// renderTopBooks();\n","// Рендер однієї секції категорії з книгами\nimport { fetchBooksByExactCategory, fetchTopBooks } from './fetch-func';\nimport { modalWindow } from './modal-window'\n// export function renderCategoryBooks() { }\n\nconst categoryList = document.querySelector('.category-list');\nconst bookThumb = document.querySelector('.tb-container');\nconst headingEl = document.querySelector('.heading-primary');\n\ncategoryList.addEventListener('click', renderCategoryBooks);\nasync function renderCategoryBooks(event) {\n  const item = event.target.textContent;\n  headingEl.textContent = item;\n  headingEl.classList.add('ctg-maintitle');\n  console.log(item);\n  const data = await fetchBooksByExactCategory(item);\n  console.log(data);\n  createMarkupBook(data);\n}\n\nfunction createMarkupBook({ data }) {\n  bookThumb.innerHTML = '';\n  const markup = data\n    .map(({ author, title, book_image }) => {\n      return `\n    <li class=\"book-item tb-books-container flex-container-item\">\n    <img class=\"book-img tb-book-img img\" src=\"${book_image}\" alt=\"${title}\">\n    <p class=\"book-title tb-book-author global-p\">${title}</p>\n    <p>${author}</p>\n    </li>`;\n    })\n    .join('');\n  bookThumb.innerHTML = markup;\n}\n\n// export function renderTopBooks() { }\n\nconst containerTbEl = document.querySelector('.tb-container');\nconst noBooksEl = document.querySelector('.no-books-card');\n\nfetchTopBooks().then(renderTopBooks);\n\nexport function renderTopBooks(bestsellersArray) {\n  if (bestsellersArray.data.length == 0) {\n    noBooksEl.classList.remove('is-hidden');\n  } else {\n    const markupCategory = bestsellersArray.data\n      .map(({ list_name, books }) => {\n        const markup = books\n          .map(({ author, title, book_image, _id }) => {\n            return `\n          <li class=\"flex-container-item\">\n            <a href=# class=\"global-link\" data-id=\"${_id}\">\n              <div class=\"tb-book-card\">\n                <img class=\"tb-book-img img\" src=\"${book_image}\" alt=\"${title}\">\n                <p class=\"tb-book-title light-theme theme-switch global-p\">${title}</p>\n                <p class=\"tb-book-author global-p\">${author}</p>\n              </div>\n            </a>\n          </li>\n          `;\n          })\n          .join('');\n        return `\n      <div class=\"tb-category-container\">\n        <h2 class='tb-category global-title'>${list_name}</h2>\n        <div class='tb-books-container'>\n          <ul class=\"global-list flex-container\">\n            ${markup}\n          </ul>\n        </div>\n        <button class=\"tb-button global-button light-theme theme-switch\">See more</button>\n      </div>\n      `;\n      })\n      .join('');\n\n    containerTbEl.insertAdjacentHTML('beforeend', markupCategory);\n    modalWindow()\n  }\n}\n","// логіка, коли вибираешь категорію\n\nimport { fetchBooksByExactCategory } from './fetch-func';\n"],"names":["parcelRequire","$eUV6u","$c63f1ae5d013a326$var$categoryList","document","querySelector","$c63f1ae5d013a326$var$loadCategory","fetchAllCategories","then","data","console","log","markup","map","param","list_name","concat","join","insertAdjacentHTML","classList","add","catch","error","$bpxeT","$d8a5ac29b53e8bc6$var$categoryList","$d8a5ac29b53e8bc6$var$bookThumb","$d8a5ac29b53e8bc6$var$headingEl","$d8a5ac29b53e8bc6$var$_renderCategoryBooks","$parcel$interopDefault","$2TvXO","mark","_callee","event","item","target","textContent","fetchBooksByExactCategory","_ctx","sent","$d8a5ac29b53e8bc6$var$createMarkupBook","apply","this","arguments","param1","innerHTML","author","title","book_image","addEventListener","$d8a5ac29b53e8bc6$var$containerTbEl","$d8a5ac29b53e8bc6$var$noBooksEl","fetchTopBooks","bestsellersArray","length","remove","markupCategory","param2","books","_id","$6VMVE","modalWindow"],"version":3,"file":"index.ed8a5575.js.map"}